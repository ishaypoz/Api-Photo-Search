{"version":3,"sources":["api/unsplash.js","components/SearchBar.js","components/ImageCard.js","components/ImageList.js","components/App.js","index.js"],"names":["axios","create","baseURL","headers","Authorization","SearchBar","state","term","onFormSubmit","event","preventDefault","props","onSubmit","className","this","type","value","onChange","setState","target","React","Component","ImageCard","setSpans","height","imageRef","current","clientHeight","spans","Math","ceil","createRef","addEventListener","image","alt_description","urls","style","gridRowEnd","ref","alt","src","regular","ImageList","images","map","key","id","App","onSearchSubmit","a","unsplash","get","params","query","response","data","results","marginTop","length","ReactDOM","render","document","querySelector"],"mappings":"gQAEeA,E,OAAAA,EAAMC,OAAO,CAC3BC,QAAS,2BACTC,QAAS,CACRC,cAAe,2DCqBFC,E,4MAvBdC,MAAQ,CAAEC,KAAM,I,EAChBC,aAAe,SAACC,GACfA,EAAMC,iBAEN,EAAKC,MAAMC,SAAS,EAAKN,MAAMC,O,uDAEtB,IAAD,OACR,OACC,yBAAKM,UAAU,cACd,0BAAMD,SAAUE,KAAKN,aAAcK,UAAU,WAC5C,yBAAKA,UAAU,SACd,kDACA,2BACCE,KAAK,OACLC,MAAOF,KAAKR,MAAMC,KAClBU,SAAU,SAACR,GAAD,OAAW,EAAKS,SAAS,CAAEX,KAAME,EAAMU,OAAOH,kB,GAhBvCI,IAAMC,WC0BfC,G,wDAzBd,WAAYX,GAAQ,IAAD,8BAClB,gBASDY,SAAW,WACV,IAAMC,EAAS,EAAKC,SAASC,QAAQC,aAC/BC,EAAQC,KAAKC,KAAKN,EAAS,IACjC,EAAKN,SAAS,CAAEU,WAXhB,EAAKtB,MAAQ,CAAEsB,MAAO,GACtB,EAAKH,SAAWL,IAAMW,YAHJ,E,gEAOlBjB,KAAKW,SAASC,QAAQM,iBAAiB,OAAQlB,KAAKS,Y,+BAQ3C,IAAD,EAC0BT,KAAKH,MAAMsB,MAArCC,EADA,EACAA,gBAAiBC,EADjB,EACiBA,KACzB,OAEC,yBAAKC,MAAO,CAAEC,WAAW,QAAD,OAAUvB,KAAKR,MAAMsB,SAC5C,yBAAKU,IAAKxB,KAAKW,SAAUc,IAAKL,EAAiBM,IAAKL,EAAKM,e,GArBrCrB,IAAMC,YCYfqB,EAVG,SAAC/B,GAElB,IAAMgC,EAAShC,EAAMgC,OAAOC,KAC3B,SAACX,GACA,OAAO,kBAAC,EAAD,CAAWY,IAAKZ,EAAMa,GAAIb,MAAOA,OAG1C,OAAO,yBAAKpB,UAAU,cAAf,IAA8B8B,EAA9B,MCeOI,E,4MAnBdzC,MAAQ,CAAEqC,OAAQ,I,EAClBK,e,uCAAiB,WAAOzC,GAAP,eAAA0C,EAAA,sEACOC,EAASC,IAAI,iBAAkB,CACrDC,OAAQ,CAAEC,MAAO9C,KAFF,OACV+C,EADU,OAKhB,EAAKpC,SAAS,CAAEyB,OAAQW,EAASC,KAAKC,UALtB,2C,6GAQhB,OACC,yBAAK3C,UAAU,eAAeuB,MAAO,CAAEqB,UAAW,SACjD,kBAAC,EAAD,CAAW7C,SAAUE,KAAKkC,iBAD3B,UAESlC,KAAKR,MAAMqC,OAAOe,OAF3B,UAGC,kBAAC,EAAD,CAAWf,OAAQ7B,KAAKR,MAAMqC,c,GAdhBvB,IAAMC,WCFxBsC,IAASC,OACR,kBAAC,EAAD,MACAC,SAASC,cAAc,Y","file":"static/js/main.1617bee7.chunk.js","sourcesContent":["import axios from 'axios'; //make http request\r\n\r\nexport default axios.create({\r\n\tbaseURL: 'https://api.unsplash.com',\r\n\theaders: {\r\n\t\tAuthorization: 'Client-ID 4tfo0QMgomrkXPhRgku5UbwNvCMjITx8ZMfGqtX5WPc'\r\n\t}\r\n});\r\n","import React from 'react';\r\n\r\nclass SearchBar extends React.Component {\r\n\tstate = { term: '' };\r\n\tonFormSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tthis.props.onSubmit(this.state.term); //if we dont use arrow function to bind the this in app will get this of props object that is the input html object.\r\n\t};\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"ui segment\">\r\n\t\t\t\t<form onSubmit={this.onFormSubmit} className=\"ui form\">\r\n\t\t\t\t\t<div className=\"field\">\r\n\t\t\t\t\t\t<label>Image SearchBar</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tvalue={this.state.term}\r\n\t\t\t\t\t\t\tonChange={(event) => this.setState({ term: event.target.value })}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default SearchBar;\r\n","import React from 'react';\r\n\r\nclass ImageCard extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\t\tthis.state = { spans: 0 };\r\n\t\tthis.imageRef = React.createRef(); //allow you to reach image props\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.imageRef.current.addEventListener('load', this.setSpans); //when data of the image is loaded\r\n\t}\r\n\t//have to use arrowfunction because callback have to be bind\r\n\tsetSpans = () => {\r\n\t\tconst height = this.imageRef.current.clientHeight;\r\n\t\tconst spans = Math.ceil(height / 10);\r\n\t\tthis.setState({ spans });\r\n\t};\r\n\trender() {\r\n\t\tconst { alt_description, urls } = this.props.image;\r\n\t\treturn (\r\n\t\t\t//we use JSX style\r\n\t\t\t<div style={{ gridRowEnd: `span ${this.state.spans}` }}>\r\n\t\t\t\t<img ref={this.imageRef} alt={alt_description} src={urls.regular} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default ImageCard;\r\n","import React from 'react';\r\nimport './ImageList.css';\r\nimport ImageCard from './ImageCard';\r\n\r\nconst ImageList = (props) => {\r\n\t//can make insteage of image just take the values inside the json image\r\n\tconst images = props.images.map(\r\n\t\t(image) /*{ id, alt_description, urls } instead of taking image and then (image.urls/id/alt_description)*/ => {\r\n\t\t\treturn <ImageCard key={image.id} image={image} />;\r\n\t\t}\r\n\t);\r\n\treturn <div className=\"image-list\"> {images} </div>;\r\n};\r\n\r\nexport default ImageList;\r\n","import React from 'react';\r\nimport unsplash from '../api/unsplash'; //make http request\r\n//Component/Pages we made\r\nimport SearchBar from './SearchBar';\r\nimport ImageList from './ImageList';\r\n\r\nclass App extends React.Component {\r\n\tstate = { images: [] };\r\n\tonSearchSubmit = async (term) => {\r\n\t\tconst response = await unsplash.get('/search/photos', {\r\n\t\t\tparams: { query: term }\r\n\t\t});\r\n\t\t//.then((response) => console.log(response.data.results));//then return a promise\r\n\t\tthis.setState({ images: response.data.results });\r\n\t};\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"ui container\" style={{ marginTop: '10px' }}>\r\n\t\t\t\t<SearchBar onSubmit={this.onSearchSubmit} />\r\n\t\t\t\tFound: {this.state.images.length} Images\r\n\t\t\t\t<ImageList images={this.state.images} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n\t<App />,\r\n\tdocument.querySelector('#root') // querySelector only select the first element in the DOM you can use getElementById instead\r\n);\r\n"],"sourceRoot":""}